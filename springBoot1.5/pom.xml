<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>java-code-parent</artifactId>
        <groupId>com.shawn</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>kaleidoscope</artifactId>
    <packaging>jar</packaging>


    <properties>
        <spring-boot.version>1.5.10.RELEASE</spring-boot.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <mybatisplus.spring.boot.version>1.0.5</mybatisplus.spring.boot.version>
        <mybatisplus.version>2.2.0</mybatisplus.version>
        <mysql.version>8.0.11</mysql.version>

        <!--<mysql.version>5.1.38</mysql.version>-->
        <mssql.version>4.0</mssql.version>
        <oracle.version>11.2.0.3</oracle.version>
        <druid.version>1.1.10</druid.version>
        <quartz.version>2.3.0</quartz.version>
        <commons.lang.version>2.6</commons.lang.version>
        <commons.fileupload.version>1.2.2</commons.fileupload.version>
        <commons.io.version>2.5</commons.io.version>
        <commons.codec.version>1.10</commons.codec.version>
        <commons.configuration.version>1.10</commons.configuration.version>
        <shiro.version>1.5.0</shiro.version>
        <jwt.version>0.9.1</jwt.version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <qiniu.version>[7.2.0, 7.2.99]</qiniu.version>
        <aliyun.oss.version>2.8.3</aliyun.oss.version>
        <qcloud.cos.version>4.4</qcloud.cos.version>
        <swagger.version>2.7.0</swagger.version>
        <swagger-bootstrap-ui.version>1.7.5</swagger-bootstrap-ui.version>
        <joda.time.version>2.9.9</joda.time.version>
        <fastjson.version>1.2.47</fastjson.version>
        <hutool.version>4.1.1</hutool.version>

        <!--wagon plugin 配置-->
        <service-path>/work/renren</service-path>
        <pack-name>${project.artifactId}-${project.version}.jar</pack-name>
        <remote-addr>192.168.1.10:22</remote-addr>
        <remote-username>root</remote-username>
        <remote-passwd>123456</remote-passwd>
    </properties>

    <dependencies>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.20</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>spring-webmvc</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-devtools</artifactId>-->
        <!--<optional>true</optional>-->
        <!--</dependency>-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatisplus-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <!--oracle驱动-->
        <!--<dependency>-->
        <!--<groupId>com.oracle</groupId>-->
        <!--<artifactId>ojdbc6</artifactId>-->
        <!--<version>${oracle.version}</version>-->
        <!--</dependency>-->
        <!--mssql驱动-->
        <!--<dependency>-->
        <!--<groupId>com.microsoft.sqlserver</groupId>-->
        <!--<artifactId>sqljdbc4</artifactId>-->
        <!--<version>${mssql.version}</version>-->
        <!--</dependency>-->
        <!--postgresql驱动-->
        <!--<dependency>-->
        <!--<groupId>org.postgresql</groupId>-->
        <!--<artifactId>postgresql</artifactId>-->
        <!--</dependency>-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.mchange</groupId>
                    <artifactId>c3p0</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons.fileupload.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>${commons.configuration.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jwt.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.axet</groupId>
            <artifactId>kaptcha</artifactId>
            <version>${kaptcha.version}</version>
        </dependency>

        <dependency>
            <groupId>com.spring4all</groupId>
            <artifactId>swagger-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>qiniu-java-sdk</artifactId>
            <version>${qiniu.version}</version>
        </dependency>
        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>${aliyun.oss.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId> <!--依赖 log4j -->
            <artifactId>mybatis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.ibatis</groupId>
            <artifactId>ibatis-core</artifactId>
            <version>3.0</version>
        </dependency>

        <dependency>
            <groupId>com.qcloud</groupId>
            <artifactId>cos_api</artifactId>
            <version>${qcloud.cos.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.time.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--<build>-->
    <!--<finalName>${project.artifactId}</finalName>-->
    <!--<extensions>-->
    <!--<extension>-->
    <!--<groupId>org.apache.maven.wagon</groupId>-->
    <!--<artifactId>wagon-ssh</artifactId>-->
    <!--<version>2.8</version>-->
    <!--</extension>-->
    <!--</extensions>-->
    <!--<plugins>-->
    <!--<plugin>-->
    <!--<groupId>org.springframework.boot</groupId>-->
    <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--<configuration>-->
    <!--<fork>true</fork>-->
    <!--</configuration>-->
    <!--</plugin>-->

    <!--&lt;!&ndash;<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-compiler-plugin</artifactId>-->
    <!--<version>3.2</version>-->
    <!--<configuration>-->
    <!--<source>1.8</source>-->
    <!--<target>1.8</target>-->
    <!--</configuration>-->
    <!--</plugin>&ndash;&gt;-->

    <!--&lt;!&ndash; 跳过单元测试 &ndash;&gt;-->
    <!--<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-surefire-plugin</artifactId>-->
    <!--<version>2.12.4</version>-->
    <!--<configuration>-->
    <!--<skipTests>true</skipTests>-->
    <!--</configuration>-->
    <!--</plugin>-->


    <!--<plugin>-->
    <!--<groupId>org.codehaus.mojo</groupId>-->
    <!--<artifactId>wagon-maven-plugin</artifactId>-->
    <!--<version>1.0</version>-->
    <!--<configuration>-->
    <!--<fromFile>target/${pack-name}</fromFile>-->
    <!--<url><![CDATA[scp://${remote-username}:${remote-passwd}@${remote-addr}${service-path}]]></url>-->
    <!--<commands>-->
    <!--&lt;!&ndash; Kill Old Process &ndash;&gt;-->
    <!--<command>kill -9 `ps -ef |grep ${project.artifactId}.jar|grep -v "grep" |awk '{print $2}'`</command>-->
    <!--&lt;!&ndash; Restart jar package，write result into renren.log &ndash;&gt;-->
    <!--<command><![CDATA[nohup java -jar ${service-path}/${pack-name} &#45;&#45;spring.profiles.active=test > ${service-path}/renren.log 2>&1 & ]]></command>-->
    <!--<command><![CDATA[netstat -nptl]]></command>-->
    <!--<command><![CDATA[ps -ef | grep java | grep -v grep]]></command>-->
    <!--</commands>-->
    <!--&lt;!&ndash; 运行命令 mvn clean package wagon:upload-single wagon:sshexec&ndash;&gt;-->
    <!--<displayCommandOutputs>true</displayCommandOutputs>-->
    <!--</configuration>-->
    <!--</plugin>-->

    <!--<plugin>-->
    <!--<groupId>com.spotify</groupId>-->
    <!--<artifactId>docker-maven-plugin</artifactId>-->
    <!--<version>0.4.14</version>-->
    <!--&lt;!&ndash;<executions>&ndash;&gt;-->
    <!--&lt;!&ndash;<execution>&ndash;&gt;-->
    <!--&lt;!&ndash;<phase>package</phase>&ndash;&gt;-->
    <!--&lt;!&ndash;<goals>&ndash;&gt;-->
    <!--&lt;!&ndash;<goal>build</goal>&ndash;&gt;-->
    <!--&lt;!&ndash;</goals>&ndash;&gt;-->
    <!--&lt;!&ndash;</execution>&ndash;&gt;-->
    <!--&lt;!&ndash;</executions>&ndash;&gt;-->
    <!--<configuration>-->
    <!--<imageName>renren/fast</imageName>-->
    <!--<dockerDirectory>${project.basedir}</dockerDirectory>-->
    <!--<resources>-->
    <!--<resource>-->
    <!--<targetPath>/</targetPath>-->
    <!--<directory>${project.build.directory}</directory>-->
    <!--<include>${project.build.finalName}.jar</include>-->
    <!--</resource>-->
    <!--</resources>-->
    <!--</configuration>-->
    <!--&lt;!&ndash; 运行命令 mvn clean package docker:build 打包并生成docker镜像 &ndash;&gt;-->
    <!--</plugin>-->
    <!--</plugins>-->
    <!--</build>-->


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profileActive>dev</profileActive>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <profileActive>test</profileActive>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profileActive>prod</profileActive>
            </properties>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--<repositories>-->
    <!--不注释的话会从repository下载，注释之后现象是从maven.aliyun.com下载-->
    <!--<repository>-->
    <!--<id>nexus-snapshots</id>-->
    <!--<url>http://118.126.99.127:9000/nexus/content/repositories/snapshots</url>-->
    <!--</repository>-->
    <!--<repository>-->
    <!--<id>nexus-releases</id>-->
    <!--<url>http://118.126.99.127:9000/nexus/content/repositories/releases</url>-->
    <!--</repository>-->
    <!--</repositories>-->

</project>
